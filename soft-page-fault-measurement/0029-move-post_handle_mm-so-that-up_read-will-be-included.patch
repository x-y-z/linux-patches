From 5e02e2a80fdcca8271bb97603ad48daf92e855c6 Mon Sep 17 00:00:00 2001
From: Zi Yan <zi.yan@cs.rutgers.edu>
Date: Wed, 5 Nov 2014 10:40:15 -0500
Subject: [PATCH 29/33] move post_handle_mm so that up_read will be included

---
 arch/x86/mm/fault.c | 46 +++++++++++++++++++++++++---------------------
 1 file changed, 25 insertions(+), 21 deletions(-)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index 7981f76..f586c1e 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -1361,12 +1361,6 @@ good_area:
 		/*return;*/
 	}
 
-    if (!IS_ERR(do_page_fault_event)) {
-        event_end = perf_event_read_value(do_page_fault_event,
-                                            &enabled, &running);
-        post_handle_mm_cycles = event_end - event_start;
-        event_start = event_end;
-    }
 	/*
 	 * Major/minor page fault accounting is only done on the
 	 * initial attempt. If we go through a retry, it is extremely
@@ -1383,23 +1377,8 @@ good_area:
 				      regs, address);
 
             if (find_vma_cycles != 0 && handle_mm_fault_cycles != 0) {
-		        tsk->find_vma_cycles += find_vma_cycles;
-                tsk->handle_mm_fault_cycles += handle_mm_fault_cycles;
-                tsk->pre_vma_cycles += pre_vma_cycles;
-                tsk->vma_to_handle_mm_cycles += vma_to_handle_mm_cycles;
-                tsk->post_handle_mm_cycles += post_handle_mm_cycles;
-			    tsk->counted_min_flt++;
                 *is_soft_page_fault = 1;
             }
-            else {
-                if (find_vma_cycles == 0){
-                    tsk->uncounted_min_flt_vma++;
-                }
-                if (handle_mm_fault_cycles == 0) {
-                    tsk->uncounted_min_flt_handl_mm_fault++;
-                }
-            }
-            tsk->vma_in_cache += vma_incache;
 		}
 		if (fault & VM_FAULT_RETRY) {
 			/* Clear FAULT_FLAG_ALLOW_RETRY to avoid any risk
@@ -1413,6 +1392,31 @@ good_area:
 	check_v8086_mode(regs, address, tsk);
 
 	up_read(&mm->mmap_sem);
+    if (!IS_ERR(do_page_fault_event)) {
+        event_end = perf_event_read_value(do_page_fault_event,
+                                            &enabled, &running);
+        post_handle_mm_cycles = event_end - event_start;
+        event_start = event_end;
+    }
+    if (*is_soft_page_fault) {
+        if (find_vma_cycles != 0 && handle_mm_fault_cycles != 0) {
+            tsk->find_vma_cycles += find_vma_cycles;
+            tsk->handle_mm_fault_cycles += handle_mm_fault_cycles;
+            tsk->pre_vma_cycles += pre_vma_cycles;
+            tsk->vma_to_handle_mm_cycles += vma_to_handle_mm_cycles;
+            tsk->post_handle_mm_cycles += post_handle_mm_cycles;
+            tsk->counted_min_flt++;
+        }
+        else {
+            if (find_vma_cycles == 0){
+                tsk->uncounted_min_flt_vma++;
+            }
+            if (handle_mm_fault_cycles == 0) {
+                tsk->uncounted_min_flt_handl_mm_fault++;
+            }
+        }
+        tsk->vma_in_cache += vma_incache;
+    }
 
 return_area:
     return;
-- 
2.1.4

